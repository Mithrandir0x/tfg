subprojects {

    group 'com.beabloo.bigdata'
    version '1.0-SNAPSHOT'

    apply plugin: 'maven'
    apply plugin: 'java'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url = "http://packages.confluent.io/maven/"
        }
    }

    project.ext {
        hadoopVersion = '2.7.1'
        
        avroVersion = '1.7.7'

        jacksonVersion = '2.7.3'

        kafkaVersion = '0.9.0.0'
        kafkaArtifact = 'kafka_2.10'
        // kafka artifact indicated which scala version has been used to compile it
        scalaVersion = '2.10.6'

        kryoVersion = '3.0.3'

        stormVersion = '1.0.0'

        servletApiVersion = '3.1.0'

        zookeeperVersion = '3.4.6'

        prometheusVersion = '0.0.10'
    }

    configurations {
        provided
        compile.extendsFrom provided
    }

    buildscript {
        // configurations.create('buildscript')
        repositories {
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }

        dependencies {
            //buildscript 'com.beabloo.basegradlescripts:base-script-java:RB-SNAPSHOT'
            //ant.unjar src: configurations.buildscript.singleFile, dest: '.gradle'
        }
    }

    // apply from: '.gradle/java/base-script-java.gradle'

    dependencies {
        // fileutils dependencies
        compile 'commons-io:commons-io:2.4'

        compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

        compile "org.hibernate:hibernate-validator:5.2.4.Final"
        compile 'org.hibernate:hibernate-validator-annotation-processor:5.2.4.Final'

        compile "javax.el:javax.el-api:2.2.4"
        compile "org.glassfish.web:javax.el:2.2.4"
    }

    task allDeps(type: DependencyReportTask) {}

}

task dependencyReport {
    doLast {
        def file = new File("project-dependencies.dot")
        file.delete()
        file << "digraph {\n"
        file << "splines=ortho\n"
        rootProject.childProjects.each { item ->
            def from = item.value
            from.configurations.compile.dependencies
                    .matching { it in ProjectDependency }
                    .each { to -> file << ("\"${from.name}\" -> \"${to.name}\"\n")}
        }
        file << "}\n"
    }
}
